// Online C++ compiler to run C++ program online
#include <iostream>
#include <vector>
using namespace std;
int main() {
    vector<int>vec;
    vec.push_back(5);
    vec.push_back(9);
    vec.push_back(8);
    vec.emplace_back(4); //emplace back is faster than push_back
    
    //Iterator points at the memory location nt at the element
    vector<int>:: iterator ie= vec.begin();
    cout<<*(ie)<<endl;  //5
    //printing elements usig iterator
    
    vector<int>:: iterator it= vec.begin();
    it++;
    cout<<*(it)<<endl;  //9
    
    // Loops and iterators
    for(vector<int>:: iterator i=vec.begin();i!=vec.end();i++){
        cout<<*(i)<<" ";
    }//5 9 8 4 
    cout<<endl;
    for(auto i=vec.begin();i!=vec.end();i++){
        cout<<*(i)<<" ";
    } //5 9 8 4 
    cout<<endl;
    for(auto i:vec){
        cout<<i<<" ";
    }//5 9 8 4 
    cout<<endl;
//v.end() points just after the address of last element
vector<int>:: iterator ii =vec.end();
// cout<< ii <<endl;

//vec.rbegin() reverse the begin and the memory just before 1st elemesnt
//vec.rend() reverse the end and points to the last element

//vec.back() returns last element
cout<<vec.back()<<endl;  //4

//swap vec1.swap(vec2)
vector<int>c1={1,2,3,4,5};
vector<int>c2={11,12,13,14,15};
c1.swap(c2);
for(auto io:c1){
    cout<<io<<" ";
}//11 12 13 14 15  c2 in c1
    cout<<endl;
    //vec.empty() will return true or false i.e 0 or 1
    vector<int>b;
    cout<<vec.empty()<<endl;  //0
    cout<<b.empty()<<endl;     //1
    //vec.clear() empty entire vector;
    cout<<c1.empty()<<endl;  //0
    c1.clear();
    cout<<c1.empty()<<endl;   //1
    return 0;
}
